# Workflow to publish the Godot openxr libraries to MavenCentral on release
name: MavenCentral Publish

on:
  release:
    # We'll run this workflow when a new GitHub release is created
    types: [published]

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python (for SCons)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install scons
        run: |
          python -m pip install scons==4.0.0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

        # Builds the release artifacts of the library
      - name: Release build
        run: |
          cd thirdparty/godot-cpp
          scons platform=android target=template_debug -j4
          scons platform=android target=template_release -j4
          cd ../..
          ./gradlew -Prelease_version=${{ github.ref_name }} build

        # Runs upload, and then closes & releases the repository
      - name: Publish to MavenCentral
        run: ./gradlew -Prelease_version=${{ github.ref_name }} publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_GROUP_ID: ${{ secrets.OSSRH_GROUP_ID }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
